[{"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/reportWebVitals.js":"1","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/ProtectedRoute.js":"2","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/user/Login.jsx":"3","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/info/About.jsx":"4","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/Home.jsx":"5","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/listItems.js":"6","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/DashboardSupplier.js":"7","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/styles/Form.js":"8","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/utils/reducer.js":"9","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/table/DocumentTable.jsx":"10","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/table/POTable.jsx":"11","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/PO/EditPO.jsx":"12","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/invoice/EditInvoice.jsx":"13","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/document/NewDocument.jsx":"14","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/supplier/NewSupplier.jsx":"15","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/InvoicesDue.js":"16","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/DashboardTabs.js":"17","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/supplier_info/Evaluation.js":"18","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/supplier_info/EvaluationChart.js":"19","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/App.js":"20","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/user/NewUser.jsx":"21","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/DashboardHome.js":"22","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/PO/NewPO.jsx":"23","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/review/NewReview.jsx":"24","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/supplier/EditSupplier.jsx":"25","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/user/LoggedOutNav.jsx":"26","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/Chart.js":"27","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/POApprovals.js":"28","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/info/Contact.jsx":"29","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/supplier_info/PurchaseOrders.js":"30","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/index.js":"31","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/SupplierNotes.js":"32","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/styles/FormContainer.js":"33","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/Title.js":"34"},{"size":362,"mtime":1611709292501,"results":"35","hashOfConfig":"36"},{"size":1254,"mtime":1612786499030,"results":"37","hashOfConfig":"36"},{"size":2555,"mtime":1612402427876,"results":"38","hashOfConfig":"36"},{"size":1354,"mtime":1612786499048,"results":"39","hashOfConfig":"36"},{"size":1457,"mtime":1612859576041,"results":"40","hashOfConfig":"36"},{"size":4788,"mtime":1612864390612,"results":"41","hashOfConfig":"36"},{"size":3103,"mtime":1612861128897,"results":"42","hashOfConfig":"36"},{"size":482,"mtime":1612396737464,"results":"43","hashOfConfig":"36"},{"size":4069,"mtime":1612845821709,"results":"44","hashOfConfig":"36"},{"size":3078,"mtime":1612848550211,"results":"45","hashOfConfig":"36"},{"size":4172,"mtime":1612863210350,"results":"46","hashOfConfig":"36"},{"size":6550,"mtime":1612859576043,"results":"47","hashOfConfig":"36"},{"size":4889,"mtime":1612859576051,"results":"48","hashOfConfig":"36"},{"size":4831,"mtime":1612859576049,"results":"49","hashOfConfig":"36"},{"size":5559,"mtime":1612859576054,"results":"50","hashOfConfig":"36"},{"size":1987,"mtime":1612848209821,"results":"51","hashOfConfig":"36"},{"size":4801,"mtime":1612847203548,"results":"52","hashOfConfig":"36"},{"size":3495,"mtime":1612842092751,"results":"53","hashOfConfig":"36"},{"size":671,"mtime":1612842092752,"results":"54","hashOfConfig":"36"},{"size":946,"mtime":1612859576040,"results":"55","hashOfConfig":"36"},{"size":4828,"mtime":1612845821708,"results":"56","hashOfConfig":"36"},{"size":2989,"mtime":1612863161023,"results":"57","hashOfConfig":"36"},{"size":5715,"mtime":1612859576045,"results":"58","hashOfConfig":"36"},{"size":4566,"mtime":1612859576053,"results":"59","hashOfConfig":"36"},{"size":6277,"mtime":1612859576054,"results":"60","hashOfConfig":"36"},{"size":1034,"mtime":1612864415949,"results":"61","hashOfConfig":"36"},{"size":2812,"mtime":1612842092737,"results":"62","hashOfConfig":"36"},{"size":1904,"mtime":1612859576047,"results":"63","hashOfConfig":"36"},{"size":2653,"mtime":1612859576050,"results":"64","hashOfConfig":"36"},{"size":331,"mtime":1612786499046,"results":"65","hashOfConfig":"36"},{"size":590,"mtime":1612396737471,"results":"66","hashOfConfig":"36"},{"size":957,"mtime":1612859576047,"results":"67","hashOfConfig":"36"},{"size":217,"mtime":1612482817153,"results":"68","hashOfConfig":"36"},{"size":343,"mtime":1612154956649,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1nojoos",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/reportWebVitals.js",[],["158","159"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/ProtectedRoute.js",[],["160","161"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/user/Login.jsx",["162","163"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/info/About.jsx",[],["164","165"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/Home.jsx",["166"],"import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Login from './user/Login'\nimport LoggedOutNav from './user/LoggedOutNav'\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst Home = ({ history }) => {\n  const classes = useStyles();\n  const loggedInStatus = localStorage.getItem(\"token\");\n  console.log(loggedInStatus)\n  if (loggedInStatus) {\n    history.push('/dashboard')\n  } \n\n  return (\n    <>\n      <div className=\"login-container\">\n        <LoggedOutNav/>\n        <div className={classes.root}>\n          <Grid container spacing={3}  alignItems=\"center\" justify=\"space-between\" style={{ minHeight: '80vh' }}>\n            <Grid item xs={12} sm={7} align=\"center\">\n              <h1>Welcome to SUPI</h1>\n              <p style={{width:\"85%\"}}>At SUPI we know how important having good suppliers is for any business. Suppliers give you the things you need to get your business off the ground and keep it running once it is. We also understand that having unreliable suppliers can make a great business not so great. This is why we created the SUPI, to help you keep track of your suppliers, maintain great relationships, and understand when it might be time to let a supplier go.</p>\n            </Grid>\n            <Login history={history}/>\n          </Grid>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/listItems.js",["167","168","169","170"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/DashboardSupplier.js",["171","172","173","174"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/styles/Form.js",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/utils/reducer.js",["175","176","177"],"export default function reducer(state, action) {\n  switch(action.type) {\n    // USER CASES\n    case 'setuser_name': {\n      return {\n        ...state,\n        user_name: action.data\n      }\n    }\n    case 'setemail': {\n      return {\n        ...state,\n        email: action.data\n      }\n    }\n    case 'setpassword': {\n      return {\n        ...state,\n        password: action.data\n      }\n    }\n    case 'setpassword_confirmation': {\n      return {\n        ...state,\n        password_confirmation: action.data\n      }\n    }\n    case 'setcompany_name': {\n      return {\n        ...state,\n        company_name: action.data\n      }\n    }\n    case 'setlogo': {\n      return {\n        ...state,\n        logo: action.data\n      }\n    }\n    // SUPPLIER CASES\n    case 'setname': {\n      return {\n        ...state,\n        name: action.data\n      }\n    }\n    case 'setservice': {\n      return {\n        ...state,\n        service: action.data\n      }\n    }\n    case 'setwebsite': {\n      return {\n        ...state,\n        website: action.data\n      }\n    }\n    case 'setcontact_name': {\n      return {\n        ...state,\n        contactName: action.data\n      }\n    }\n    case 'setcontact_email': {\n      return {\n        ...state,\n        contactEmail: action.data\n      }\n    }\n    case 'setcontact_number': {\n      return {\n        ...state,\n        contactNumber: action.data\n      }\n    }\n    case 'setdescription': {\n      return {\n        ...state,\n        description: action.data\n      }\n    }\n    case 'setnote': {\n      return {\n        ...state,\n        note: action.data\n      }\n    }\n    case 'setlogo': {\n      return {\n        ...state,\n        logo: action.data\n      }\n    }\n    // PO CASES\n    case 'setorderDate': {\n      return {\n        ...state,\n        orderDate: action.data\n      }\n    }\n    case 'setapprovalStatus': {\n      return {\n        ...state,\n        approvalStatus: action.data\n      }\n    }\n    case 'settotalPrice': {\n      return {\n        ...state,\n        totalPrice: action.data\n      }\n    }\n    case 'setdelivered': {\n      return {\n        ...state,\n        delivered: action.data\n      }\n    }\n    // case 'setSupplierId': {\n    //   return {\n    //     ...state,\n    //     supplierId: action.data\n    //   }\n    // }\n    case 'setPODocument': {\n      return {\n        ...state,\n        PODocument: action.data\n      }\n    }\n    // Need to add file state here\n    // INVOICE CASES\n    case 'setreceivedDate': {\n      return {\n        ...state,\n        receivedDate: action.data\n      }\n    }\n    case 'setdueDate': {\n      return {\n        ...state,\n        dueDate: action.data\n      }\n    }\n    case 'settotalPrice': {\n      return {\n        ...state,\n        totalPrice: action.data\n      }\n    }\n    case 'setpaid': {\n      return {\n        ...state,\n        paid: action.data\n      }\n    }\n    case 'setpurchaseOrderId': {\n      return {\n        ...state,\n        purchaseOrderId: action.data\n      }\n    }\n    case 'setinvoiceDocument': {\n      return {\n        ...state,\n        invoiceDocument: action.data\n      }\n    }\n    // Need to add file state here\n    // REVIEW CASES\n    case 'setpurchaseOrderId': {\n      return {\n        ...state,\n        purchaseOrderId: action.data\n      }\n    }\n    case 'setqualityRating': {\n      return {\n        ...state,\n        qualityRating: action.data\n      }\n    }\n    case 'setreliabilityRating': {\n      return {\n        ...state,\n        reliabilityRating: action.data\n      }\n    }\n    case 'setcostRating': {\n      return {\n        ...state,\n        costRating: action.data\n      }\n    }\n    case 'setcomment': {\n      return {\n        ...state,\n        comment: action.data\n      }\n    }\n    // DOCUMENT CASES\n    case 'setexpiryDate': {\n      return {\n      ...state,\n      expiryDate: action.data\n      }\n    }\n    case 'setdocumentType': {\n      return {\n        ...state,\n        documentType: action.data\n      }\n    }\n    case 'setsupplierDocument': {\n      return {\n        ...state,\n        supplierDocument: action.data\n      }\n    }\n    default: return state\n  }\n}",["178","179"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/table/DocumentTable.jsx",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/table/POTable.jsx",["180"],"import React, { useState, useEffect } from \"react\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function POTable({poData}) {\n  const classes = useStyles();\n\n  const [purchaseOrders, setPurchaseOrders] = useState([]);\n\n  function fetchPurchaseOrders() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/purchase_orders`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    })\n      .then((res) => res.json())\n      .then((body) => setPurchaseOrders(body))\n  }\n\n  useEffect(() => {\n    fetchPurchaseOrders();\n  },[])\n\n  const invoiceLinks = purchaseOrders.map((PO, index) => {\n    return `/dashboard/purchase_orders/${PO.id}/invoices/new`\n  })\n\n  const reviewLinks = purchaseOrders.map((PO, index) => {\n    return `/dashboard/purchase_orders/${PO.id}/reviews/new`\n  })\n\n  return (\n    <div>\n      <h1 className=\"table-heading\">Purchase Orders</h1>\n      <div className=\"table-button\">\n        <button>\n          <a href=\"/dashboard/purchase_orders/new\" style={{textDecoration: \"none\"}}>+ New PO</a>\n        </button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Purchase Order #</StyledTableCell>\n              <StyledTableCell align=\"right\">Order Date</StyledTableCell>\n              <StyledTableCell align=\"right\">Approval Status</StyledTableCell>\n              <StyledTableCell align=\"right\">Total Price</StyledTableCell>\n              <StyledTableCell align=\"right\">Delivery Status</StyledTableCell>\n              <StyledTableCell align=\"right\">PO Document</StyledTableCell>\n              <StyledTableCell align=\"right\">Invoice</StyledTableCell>\n              <StyledTableCell align=\"right\">Review</StyledTableCell>\n              <StyledTableCell align=\"right\">Manage PO</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {purchaseOrders.map((PO, index) => (\n              <StyledTableRow key={PO.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  # {PO.id}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{PO.orderDate}</StyledTableCell>\n                <StyledTableCell align=\"right\">{PO.approvalStatus ? \"Approved\" : \"Awaiting approval\"}</StyledTableCell>\n                <StyledTableCell align=\"right\">${PO.totalPrice}</StyledTableCell>\n                <StyledTableCell align=\"right\">{PO.deliveryStatus ? \"Delivered\" : \"Awaiting delivery\"}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <a href={PO.po_document.url} target=\"_blank\">PO Document file</a>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <a href={invoiceLinks[index]}>Add invoice</a>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <a href={reviewLinks[index]}>Add review</a>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <a href={`/dashboard/purchase_orders/${PO.id}/edit`}>Edit</a>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/PO/EditPO.jsx",["181","182","183"],"import React, {useReducer, useState, useEffect} from \"react\"\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useParams } from \"react-router-dom\";\n\nfunction EditPO(props) {\n  const initialPOState = {\n    orderDate: \"\",\n    approvalStatus: \"\",\n    totalPrice: \"\",\n    delivered: \"\",\n    PODocument: null\n  }\n\n  const { id } = useParams();\n  console.log(id)\n  const [supplierId, setSupplierId] = useState({\n    data: [],\n    selected: \"\",\n  });\n\n  function fetchSuppliers() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/suppliers`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((body) => {\n        const {suppliers} = body\n        setSupplierId({\n          data: suppliers,\n          selected: \"\",\n        })\n      });\n  }\n\n  useEffect(() => {\n    fetchSuppliers();\n  }, []);\n\n  const [store, dispatch] = useReducer(reducer, initialPOState);\n  const {\n    orderDate,\n    approvalStatus,\n    totalPrice,\n    delivered,\n    PODocument,\n  } = store;\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  const handleSelect = (e) => {\n    setSupplierId({\n      data: supplierId.data,\n      selected: e.target.value,\n    });\n  };\n\n  const purchaseOrderKeys = [\n    \"orderDate\",\n    \"approvalStatus\",\n    \"totalPrice\",\n    \"delivered\",\n    \"PODocument\"\n  ];\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/purchase_orders/${id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        const {po} = response\n        purchaseOrderKeys.map((element) => {\n          dispatch({\n            type: `set${element}`,\n            data: po[element],\n          });\n        });\n      });\n  }, []);\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"orderDate\", orderDate)\n    formData.append(\"approvalStatus\", approvalStatus)\n    formData.append(\"totalPrice\", totalPrice)\n    formData.append(\"delivered\", delivered)\n    formData.append(\"supplier_id\", supplierId.selected)\n    formData.append(\"po_document\", PODocument)\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/purchase_orders/${id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: formData,\n        }\n      );\n      alert(\"Purchase order updated\");\n      props.history.push(\"/dashboard/purchase_orders\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">Edit PO</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"orderDate\">Order date</label>\n            <input\n              type=\"date\"\n              name=\"orderDate\"\n              id=\"orderDate\"\n              value={orderDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"approvalStatus\">Approval</label>\n            <select\n              name=\"approvalStatus\"\n              id=\"approvalStatus\"\n              value={approvalStatus}\n              onChange={handleChange}\n            >\n              <option value=\"\">Select approval status</option>\n              <option value={false}>Awaiting approval</option>\n              <option value={true}>Approved</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"totalPrice\">Total price</label>\n            <input\n              type=\"number\"\n              name=\"totalPrice\"\n              id=\"totalPrice\"\n              value={totalPrice}\n              step=\".01\"\n              min=\"1\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"delivered\">Delivery</label>\n            <select\n              name=\"delivered\"\n              id=\"delivered\"\n              value={delivered}\n              onChange={handleChange}\n            >\n              <option value=\"\">Select delivery status</option>\n              <option value={false}>Awaiting delivery</option>\n              <option value={true}>Delivered</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"supplierId\">Supplier</label>\n            <select\n              name=\"supplierId\"\n              id=\"supplierId\"\n              value={supplierId}\n              onChange={handleSelect}\n            >\n              <option key={0} value={\"\"}>\n                Select supplier\n              </option>\n              {supplierId.data.map((option) => {\n                return (\n                  <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"PODocument\">File</label>\n            <input\n              type=\"file\"\n              name=\"PODocument\"\n              id=\"PODocument\"\n              required\n              accept=\".pdf,.doc,.md\"\n              onChange={handleFile} \n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Edit PO\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Save\n            </Button>\n          </div>\n          <div className=\"form-content\">\n            <Button\n              variant=\"contained\"\n              value=\"go back\"\n              id=\"submit\"\n              onClick={() => {\n                props.history.goBack();\n              }}\n            >\n              Back\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  );\n}\n\nexport default EditPO;","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/invoice/EditInvoice.jsx",["184","185","186"],"import React, { useReducer, useEffect } from \"react\";\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useParams } from \"react-router-dom\";\n\nfunction EditInvoice(props) {\n  const initialInvoiceState = {\n    receivedDate: \"\",\n    dueDate: \"\",\n    totalPrice: \"\",\n    paid: \"\",\n    invoiceDocument: \"\"\n  }\n\n  const { id } = useParams();\n  const [store, dispatch] = useReducer(reducer, initialInvoiceState)\n  const {receivedDate, dueDate, totalPrice, paid, invoiceDocument} = store\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  const invoiceKeys = [\n    \"receivedDate\",\n    \"dueDate\",\n    \"totalPrice\",\n    \"paid\",\n    // \"purchaseOrderId\",\n    \"invoiceDocument\"\n  ]\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/invoices/${id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((invoice) => {\n        invoiceKeys.map((element) => {\n          dispatch({\n            type: `set${element}`,\n            data: invoice[element],\n          });\n        });\n      });\n  }, []);\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"receivedDate\", receivedDate)\n    formData.append(\"dueDate\", dueDate)\n    formData.append(\"totalPrice\", totalPrice)\n    formData.append(\"paid\", paid)\n    // formData.append(\"purchase_order_id\", match.params.id)\n    formData.append(\"invoice_document\", invoiceDocument)\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/invoices/${id}`, {\n        method: \"PUT\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formData,\n      });\n      alert(\"Invoice updated\")\n      props.history.push(\"/dashboard/invoices\")\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">Edit Invoice</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"receivedDate\">Date received</label>\n            <input\n              type=\"date\"\n              name=\"receivedDate\"\n              id=\"receivedDate\"\n              value={receivedDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"dueDate\">Date due</label>\n            <input\n              type=\"date\"\n              name=\"dueDate\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"totalPrice\">Total price</label>\n            <input\n              type=\"number\"\n              name=\"totalPrice\"\n              id=\"totalPrice\"\n              step=\".01\"\n              min=\"1\"\n              value={totalPrice}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"paid\">Payment made</label>\n            <select \n              name=\"paid\" \n              id=\"paid\"\n              value={paid}\n              onChange={handleChange}>\n                <option value=''>Select payment status</option>\n                <option value={false}>Awaiting payment</option>\n                <option value={true}>Payment made</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"invoiceDocument\">File</label>\n            <input\n              type=\"file\"\n              name=\"invoiceDocument\"\n              id=\"invoiceDocument\"\n              required\n              accept=\".pdf,.doc,.md\" \n              onChange={handleFile}\n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Edit Invoice\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Save\n            </Button>\n          </div>\n          <div className=\"form-content\">\n            <Button\n              variant=\"contained\"\n              id=\"submit\"\n              onClick={()=>{props.history.goBack()}}\n            >\n              Back\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  )\n}\n\nexport default EditInvoice;","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/document/NewDocument.jsx",["187"],"import React, {useReducer, useState, useEffect} from \"react\"\nimport reducer from '../../utils/reducer'\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction NewDocument({ history }) {\n  const initialDocumentState = {\n    expiryDate: \"\",\n    documentType: \"\",\n    supplierDocument: \"\"\n  }\n\n  const [store, dispatch] = useReducer(reducer, initialDocumentState)\n  const {expiryDate, documentType, supplierDocument} = store\n\n  const [supplierId, setSupplierId] = useState({\n    data: [],\n    selected: ''\n  });\n\n  function fetchSuppliers() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/suppliers`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    })\n      .then((res) => res.json())\n      .then((body) => {\n        const {suppliers} = body\n        setSupplierId({\n          data: suppliers,\n          selected: ''\n      })\n    })\n  }\n\n  useEffect(() => {\n    fetchSuppliers();\n  },[])\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value\n    })\n  }\n\n  const handleSelect = (e) => {\n    setSupplierId({\n      data: supplierId.data,\n      selected: e.target.value\n    })\n  }\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"expiryDate\", expiryDate)\n    formData.append(\"documentType\", documentType)\n    formData.append(\"supplier_id\", supplierId.selected)\n    formData.append(\"supplier_document\", supplierDocument)\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/documents`, {\n        method: \"POST\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formData,\n      });\n      history.push(\"/dashboard/documents\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">New Document</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"expiryDate\">Expiry date</label>\n            <input\n              type=\"date\"\n              name=\"expiryDate\"\n              id=\"expiryDate\"\n              value={expiryDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"documentType\">Document type</label>\n            <select \n              name=\"documentType\" \n              id=\"documentType\"\n              value={documentType}\n              onChange={handleChange}>\n                <option value=\"\">Select document type</option>\n                <option value=\"Licence\">Licence</option>\n                <option value=\"Contract\">Contract</option>\n                <option value=\"Risk Assessment\">Risk Assessment</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"supplierId\">Supplier</label>\n            <select\n              name=\"supplierId\"\n              id=\"supplierId\"\n              value={supplierId}\n              onChange={handleSelect}>\n                <option key={0} value={''}>\n                    Select supplier\n                  </option>\n                {supplierId.data.map((option) => {\n                  return( <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option> )\n                })}\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"supplierDocument\">File</label>\n            <input\n              type=\"file\"\n              name=\"supplierDocument\"\n              id=\"supplierDocument\"\n              required\n              accept=\".pdf,.doc,.md\"\n              onChange={handleFile} \n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Create Document\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n          </div>\n          <div className=\"form-content\">\n            <Button\n              variant=\"contained\"\n              id=\"submit\"\n              onClick={()=>{history.goBack()}}\n            >\n              Back\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  )\n}\n\nexport default NewDocument;\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/supplier/NewSupplier.jsx",["188"],"import React, { useReducer } from \"react\";\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\n\nfunction NewSupplier({ history }) {\n  const initialSupplierState = {\n    name: \"\",\n    service: \"\",\n    website: \"\",\n    contactName: \"\",\n    contactEmail: \"\",\n    contactNumber: \"\",\n    description: \"\",\n    note: \"\",\n    logo: \"\"\n  };\n\n  // recommend we add a function to set today's date as the min value for date inputs\n\n  const [store, dispatch] = useReducer(reducer, initialSupplierState);\n  const {\n    name,\n    service,\n    website,\n    contactName,\n    contactEmail,\n    contactNumber,\n    description,\n    note,\n    logo\n  } = store;\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n    \n    const formData = new FormData();\n    formData.append(\"name\", name)\n    formData.append(\"service\", service)\n    formData.append(\"website\", website)\n    formData.append(\"contact_name\", contactName)\n    formData.append(\"contact_email\", contactEmail)\n    formData.append(\"contact_number\", contactNumber)\n    formData.append(\"description\", description)\n    formData.append(\"note\", note)\n    formData.append(\"logo\", logo)\n\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/suppliers`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: formData,\n        }\n      );\n      history.push(\"/dashboard\");\n      alert(\"Supplier created\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">New Supplier</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"name\">Supplier name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"service\">Service</label>\n            <input\n              type=\"text\"\n              name=\"service\"\n              id=\"service\"\n              value={service}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"website\">Website url</label>\n            <input\n              type=\"text\"\n              name=\"website\"\n              id=\"website\"\n              value={website}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"contactName\">Supplier contact name</label>\n            <input\n              type=\"text\"\n              name=\"contact_name\"\n              id=\"contactName\"\n              value={contactName}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"contactEmail\">Supplier contact email</label>\n            <input\n              type=\"email\"\n              name=\"contact_email\"\n              id=\"contactEmail\"\n              value={contactEmail}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"contactNumber\">Supplier contact number</label>\n            <input\n              type=\"text\"\n              name=\"contact_number\"\n              id=\"contactNumber\"\n              value={contactNumber}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              value={description}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"note\">Note</label>\n            <textarea\n              type=\"text\"\n              name=\"note\"\n              id=\"note\"\n              value={note}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"logo\">Logo</label>\n            <input\n              type=\"file\"\n              name=\"logo\"\n              id=\"logo\"\n              accept=\".jpg,.jpeg,.png\"\n              required\n              onChange={handleFile} \n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Add Supplier\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n            <Button \n              variant=\"contained\"\n              value=\"go back\"\n              id=\"submit\"\n              onClick={()=>{history.goBack()}}>\n              Back\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  );\n}\n\nexport default NewSupplier;\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/InvoicesDue.js",["189","190"],"import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function InvoicesDue({invoiceData}) {\n  const classes = useStyles();\n  if (invoiceData) {\n    let counter = 0\n    const dueInvoiceData = invoiceData.filter((invoice) => invoice.paid === false)\n    return (\n      <React.Fragment>\n        <Title>Invoices Due</Title>\n        <Typography component=\"p\" variant=\"h3\">\n          {dueInvoiceData.length}\n        </Typography>\n        <Typography color=\"textSecondary\" className={classes.depositContext}>\n          {dueInvoiceData.reverse().map((invoice) => {\n            if (invoice.paid === false && counter <= 5 && invoice.invoice_document ) {\n              counter += 1\n                return (\n                <div>\n                  <Link color=\"primary\" href={invoice.invoice_document.url} target=\"_blank\">\n                    ${invoice.totalPrice} - Due on: {invoice.dueDate}\n                  </Link>\n                </div>\n                )\n              }\n            else if (invoice.paid === false && counter <= 5) {\n              counter += 1\n                return (\n                <div>\n                  <p>\n                    ${invoice.totalPrice} - Due on: {invoice.dueDate}\n                  </p>\n                </div>\n                )\n            }\n\n            }\n          )}\n        </Typography>\n      \n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Title>Invoices Due</Title>\n        <Typography component=\"p\" variant=\"h3\">\n          0\n        </Typography>\n        <Typography color=\"textSecondary\" className={classes.depositContext}>\n          \n        </Typography>\n        \n      </React.Fragment>\n    );\n  }\n}\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/DashboardTabs.js",["191","192","193","194","195"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Overview from \"./supplier_info/Overview\";\nimport Evaluation from \"./supplier_info/Evaluation\";\nimport PurchaseOrders from \"./supplier_info/PurchaseOrders\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport POTable from \"../table/POTable\"\nimport InvoiceTable from \"../table/InvoiceTable\"\nimport DocumentTable from \"../table/DocumentTable\"\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 40,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(1),\n    \"&:hover\": {\n      color: theme.palette.primary.main,\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: theme.palette.primary.main,\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    \"&:focus\": {\n      color: theme.palette.primary.main,\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function DashboardTabs({ supplier, poData, reviewData, invoiceData, fixedHeightPaper }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  // calculate the three rating values\n  let costRating = 0\n  let qualityRating = 0\n  let reliabilityRating = 0\n\n  if (reviewData) {\n    reviewData.map((review) => {\n    costRating += review.costRating\n    reliabilityRating += review.reliabilityRating\n    qualityRating += review.qualityRating\n  })\n  costRating =  parseFloat((Math.round(costRating/(reviewData.length) * 2) / 2).toFixed(1))\n  reliabilityRating =  parseFloat((Math.round(reliabilityRating/(reviewData.length) * 2) / 2).toFixed(1))\n  qualityRating =  parseFloat((Math.round(qualityRating/(reviewData.length) * 2) / 2).toFixed(1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <AntTab label=\"Overview\" {...a11yProps(0)} />\n          <AntTab label=\"Evaluation\" {...a11yProps(1)} />\n          <AntTab label=\"Purchase Orders\" {...a11yProps(2)} />\n          <AntTab label=\"Invoices\" {...a11yProps(3)} />\n          <AntTab label=\"Documents\" {...a11yProps(4)} />\n        </Tabs>\n      </AppBar>\n      {/* Overview Tab */}\n      <TabPanel value={value} index={0}>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={12} lg={12}>\n            <Overview supplier={supplier} fixedHeightPaper={fixedHeightPaper} poData={poData} invoiceData={invoiceData} costRating={costRating} qualityRating={qualityRating} reliabilityRating={reliabilityRating} />\n          </Grid>\n        </Grid>\n      </TabPanel>\n      {/* Evaluation Tab */}\n      <TabPanel value={value} index={1}>\n        <Grid container spacing={1}>\n          <Evaluation supplier={supplier} reviewData={reviewData} costRating={costRating} qualityRating={qualityRating} reliabilityRating={reliabilityRating} />\n        </Grid>\n      </TabPanel>\n      {/* Purchase Order Tab */}\n      <TabPanel value={value} index={2}>\n        <POTable poData={poData}/>\n      </TabPanel>\n      {/* Invoices Tab */}\n      <TabPanel value={value} index={3}>\n        <InvoiceTable invoiceData={invoiceData}/>\n      </TabPanel>\n      {/* Documents Tab */}\n      <TabPanel value={value} index={4}>\n        <DocumentTable poData={poData}/>\n      </TabPanel>\n    </div>\n  );\n}\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/supplier_info/Evaluation.js",["196","197","198","199","200","201","202"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport Paper from \"@material-ui/core/Paper\";\nimport StarHalfIcon from \"@material-ui/icons/StarHalf\";\nimport Button from \"@material-ui/core/Button\";\nimport EvaluationChart from \"./EvaluationChart\";\nimport clsx from \"clsx\";\nimport DashboardStyles from \"../DashboardStyles\";\nimport Rating from \"./Rating\";\n\nexport default function Evaluation({\n  supplier,\n  reviewData,\n  costRating,\n  qualityRating,\n  reliabilityRating,\n}) {\n  const useStyles = DashboardStyles;\n  const classes = useStyles();\n  const fixedHeightChartPaper = clsx(classes.paper, classes.chartHeight);\n  const [reviewType, setReviewType] = useState(\"\");\n  const [reviewRating, setReviewRating] = useState([]);\n  const [reviewComment, setReviewComment] = useState([]);\n\n  // // get all PO data and their reviews for the selected supplier, can go to DashboardTabs\n  useEffect(() => {\n    setReviewType(\"Cost Rating\");\n    setReviewRating(handleReview(\"costRating\"));\n    setReviewComment(handleComment());\n    // console.log(\"reviewRating: \" + reviewRating)\n  }, []);\n\n  const handleReview = (type) => {\n    let reviewArray = [];\n    if (reviewData) {\n      reviewData.map((review) => {\n      reviewArray.push({\n        name: review.created_at.substring(0, 10),\n        rating: review[type],\n      });\n    });\n  };\n    return reviewArray;\n  };\n  const handleComment = () => {\n    let commentArray = [];\n    if (reviewData) {\n      reviewData.map((review) => {\n      commentArray.push({\n        date: review.created_at.substring(0, 10),\n        comment: review[\"comment\"],\n      });\n    });\n    return commentArray;\n  }\n  };\n\n  return (\n    <Grid container spacing={3} direction=\"row\" justify=\"flex-start\">\n      <Grid item xs={12} md={9} lg={9}>\n        <Paper className={fixedHeightChartPaper} variant=\"outlined\">\n          <EvaluationChart\n            reviewType={reviewType}\n            reviewRating={reviewRating}\n          />\n        </Paper>\n        <Button\n          variant=\"contained\"\n          value=\"costRating\"\n          color=\"primary\"\n          onClick={() => {\n            setReviewType(\"Cost Rating\");\n            setReviewRating(handleReview(\"costRating\"));\n          }}\n        >\n          Cost\n        </Button>\n        <Button\n          variant=\"contained\"\n          value=\"qualityRating\"\n          color=\"primary\"\n          onClick={() => {\n            setReviewType(\"Quality Rating\");\n            setReviewRating(handleReview(\"qualityRating\"));\n          }}\n        >\n          Quality\n        </Button>\n        <Button\n          variant=\"contained\"\n          value=\"reliabilityRating\"\n          color=\"primary\"\n          onClick={() => {\n            setReviewType(\"Reliability Rating\");\n            setReviewRating(handleReview(\"reliabilityRating\"));\n          }}\n        >\n          Reliability\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} md={3} lg={3}>\n        <h4>Cost Rating</h4>\n        <Rating rating={costRating} />\n        <h4>Quality Rating</h4>\n        <Rating rating={qualityRating} />\n        <h4>Reliability Rating</h4>\n        <Rating rating={reliabilityRating} />\n      </Grid>\n\n      {/* <Grid item xs={12} md={8} lg={8}>\n        <h1>Latest Review</h1>\n        <h5>Date: {reviewComment[0]}</h5>\n        <p> {Object.keys(reviewComment)}</p>\n      </Grid> */}\n    </Grid>\n  );\n}\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/supplier_info/EvaluationChart.js",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/App.js",["203","204","205","206","207"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/user/NewUser.jsx",["208","209","210"],"import React, { useReducer } from \"react\";\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form, Container } from \"../styles/Form\";\nimport Button from \"@material-ui/core/Button\";\nimport LoggedOutNav from \"./LoggedOutNav\";\nimport FormContainer from \"../styles/FormContainer\";\n\nfunction NewUser({ history }) {\n\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n    user_name: \"\",\n    company_name: \"\",\n    logo: \"\",\n  };\n\n  const [store, dispatch] = useReducer(reducer, initialState);\n  const {\n    email,\n    password,\n    user_name,\n    company_name,\n    password_confirmation,\n    logo,\n  } = store;\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"email\", email)\n    formData.append(\"password\", password)\n    formData.append(\"user_name\", user_name)\n    formData.append(\"company_name\", company_name)\n    formData.append(\"password_confirmation\", password_confirmation)\n    formData.append(\"logo\", logo)\n\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/sign_up`,\n        {\n          method: \"POST\",\n          headers: {\n          },\n          body: formData,\n        }\n      );\n      if (response.status >= 400) {\n        throw new Error(\"invalid authentication\");\n      } else {\n        const response = await fetch(\n          `${process.env.REACT_APP_BACKEND_URL}/login`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ auth: { email, password } }),\n          }\n        );\n        const { user_name, jwt } = await response.json();\n        // user_name\n        history.push(\"/\");\n        alert(\"You have signed up!\");\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n  return (\n    <div>\n      <LoggedOutNav />\n      <FormContainer>\n        <Grid item xs={12} sm={8}>\n          <div className=\"form-container\">\n            <h1>Sign Up</h1>\n            <Form className=\"signup-form\" encType=\"multipart/form-data\" onSubmit={onFormSubmit}>\n              <div className=\"form-content\">\n                <label htmlFor=\"user_name\">Username</label>\n                <input\n                  type=\"text\"\n                  name=\"user_name\"\n                  id=\"user_name\"\n                  value={user_name}\n                  onChange={handleChange}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={handleChange}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={handleChange}\n                />\n                <label htmlFor=\"password_confirmation\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password_confirmation\"\n                  id=\"password_confirmation\"\n                  value={password_confirmation}\n                  onChange={handleChange}\n                />\n                <label htmlFor=\"company_name\">Company Name</label>\n                <input\n                  type=\"text\"\n                  name=\"company_name\"\n                  id=\"company_name\"\n                  value={company_name}\n                  onChange={handleChange}\n                />\n                <label htmlFor=\"logo\">Logo</label>\n                <input\n                  type=\"file\"\n                  name=\"logo\"\n                  id=\"logo\"\n                  accept=\".jpg,.jpeg,.png\"\n                  onChange={handleFile} \n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  value=\"submit\"\n                  id=\"submit\"\n                >\n                  Sign Up\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"default\"\n                  id=\"submit\"\n                  onClick={() => history.goBack()}\n                >\n                  Go Back\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </Grid>\n      </FormContainer>\n    </div>\n  );\n}\nexport default NewUser;\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/DashboardHome.js",["211","212","213","214","215","216"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/PO/NewPO.jsx",["217"],"import React, {useReducer, useState, useEffect} from \"react\"\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction NewPO({ history }) {\n  const initialPOState = {\n    orderDate: \"\",\n    approvalStatus: \"\",\n    totalPrice: \"\",\n    delivered: \"\",\n    PODocument: null\n  }\n  \n  const [supplierId, setSupplierId] = useState({\n    data: [],\n    selected: \"\",\n  });\n\n  function fetchSuppliers() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/suppliers`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((body) => {\n        const {suppliers} = body\n        setSupplierId({\n          data: suppliers,\n          selected: \"\",\n        })\n      });\n  }\n\n  useEffect(() => {\n    fetchSuppliers();\n  }, []);\n\n  const [store, dispatch] = useReducer(reducer, initialPOState);\n  const {\n    orderDate,\n    approvalStatus,\n    totalPrice,\n    delivered,\n    PODocument,\n  } = store;\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  const handleSelect = (e) => {\n    setSupplierId({\n      data: supplierId.data,\n      selected: e.target.value,\n    });\n  };\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"orderDate\", orderDate)\n    formData.append(\"approvalStatus\", approvalStatus)\n    formData.append(\"totalPrice\", totalPrice)\n    formData.append(\"delivered\", delivered)\n    formData.append(\"supplier_id\", supplierId.selected)\n    formData.append(\"po_document\", PODocument)\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/purchase_orders`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: formData,\n        }\n      );\n      history.push(\"/dashboard/purchase_orders\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">New PO</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"orderDate\">Order date</label>\n            <input\n              type=\"date\"\n              name=\"orderDate\"\n              id=\"orderDate\"\n              value={orderDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"approvalStatus\">Approval</label>\n            <select\n              name=\"approvalStatus\"\n              id=\"approvalStatus\"\n              value={approvalStatus}\n              onChange={handleChange}\n            >\n              <option value=\"\">Select approval status</option>\n              <option value={false}>Awaiting approval</option>\n              <option value={true}>Approved</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"totalPrice\">Total price</label>\n            <input\n              type=\"number\"\n              name=\"totalPrice\"\n              id=\"totalPrice\"\n              value={totalPrice}\n              step=\".01\"\n              min=\"1\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"delivered\">Delivery</label>\n            <select\n              name=\"delivered\"\n              id=\"delivered\"\n              value={delivered}\n              onChange={handleChange}\n            >\n              <option value=\"\">Select delivery status</option>\n              <option value={false}>Awaiting delivery</option>\n              <option value={true}>Delivered</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"supplierId\">Supplier</label>\n            <select\n              name=\"supplierId\"\n              id=\"supplierId\"\n              value={supplierId}\n              onChange={handleSelect}\n            >\n              <option key={0} value={\"\"}>\n                Select supplier\n              </option>\n              {supplierId.data.map((option) => {\n                return (\n                  <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"PODocument\">File</label>\n            <input\n              type=\"file\"\n              name=\"PODocument\"\n              id=\"PODocument\"\n              required\n              accept=\".pdf,.doc,.md\"\n              onChange={handleFile} \n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Create PO\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n            <Button \n              variant=\"contained\"\n              value=\"go back\"\n              id=\"submit\"\n              onClick={()=>{history.goBack()}}>\n              Back\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  );\n}\n\nexport default NewPO;\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/review/NewReview.jsx",["218"],"import React, { useReducer } from \"react\";\nimport reducer from \"../../utils/reducer\";\nimport { Form } from \"../styles/Form\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction NewReview({ history, match }) {\n  const initialReviewState = {\n    qualityRating: \"\",\n    reliabilityRating: \"\",\n    costRating: \"\",\n    comment: \"\",\n    purchaseOrderId: match.params.id\n  }\n\n  const [store, dispatch] = useReducer(reducer, initialReviewState)\n  const {qualityRating, reliabilityRating, costRating, comment} = store\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n    const body = { review: {qualityRating: qualityRating, reliabilityRating: reliabilityRating, costRating: costRating, comment: comment, purchase_order_id: match.params.id} }\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/reviews`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify(body),\n        }\n      );\n      alert(\"Review created\")\n      history.push(\"/dashboard/purchase_orders\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">New Review</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit}>\n          <div className=\"form-content\">\n            <label htmlFor=\"qualityRating\">Quality rating</label>\n            <select \n              name=\"qualityRating\"\n              id=\"qualityRating\"\n              value={qualityRating}\n              onChange={handleChange}>\n                <option value=''>Select rating</option>\n                <option value={0}>0 Stars</option>\n                <option value={1}>1 Star</option>\n                <option value={2}>2 Stars</option>\n                <option value={3}>3 Stars</option>\n                <option value={4}>4 Stars</option>\n                <option value={5}>5 Stars</option>\n              </select>\n            </div>\n            <div className=\"form-content\">\n              <label htmlFor=\"reliabilityRating\">Reliability rating</label>\n              <select \n                name=\"reliabilityRating\"\n                id=\"reliabilityRating\"\n                value={reliabilityRating}\n                onChange={handleChange}>\n                  <option value=''>Select rating</option>\n                <option value={0}>0 Stars</option>\n                <option value={1}>1 Star</option>\n                <option value={2}>2 Stars</option>\n                <option value={3}>3 Stars</option>\n                <option value={4}>4 Stars</option>\n                <option value={5}>5 Stars</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"costRating\">Cost rating</label>\n            <select \n              name=\"costRating\" \n              id=\"costRating\"\n              value={costRating}\n              onChange={handleChange}>\n                <option value=''>Select rating</option>\n                <option value={0}>0 Stars</option>\n                <option value={1}>1 Star</option>\n                <option value={2}>2 Stars</option>\n                <option value={3}>3 Stars</option>\n                <option value={4}>4 Stars</option>\n                <option value={5}>5 Stars</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"comment\">Comment</label>\n            <textarea\n              type=\"text\"\n              name=\"comment\"\n              id=\"comment\"\n              value={comment}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Submit Review\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n            <Button \n              variant=\"contained\"\n              value=\"go back\"\n              id=\"submit\"\n              onClick={()=>{history.goBack()}}>\n              Back\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  );\n}\n\nexport default NewReview;\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/supplier/EditSupplier.jsx",["219","220","221","222"],"import React, { useReducer, useEffect } from \"react\";\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useParams, Link } from \"react-router-dom\";\n\nfunction EditSupplier(props) {\n  const initialSupplierState = {\n    name: \"\",\n    service: \"\",\n    website: \"\",\n    contactName: \"\",\n    contactEmail: \"\",\n    contactNumber: \"\",\n    description: \"\",\n    note: \"\",\n    logo: \"\"\n  };\n\n  const { id } = useParams();\n\n  const [store, dispatch] = useReducer(reducer, initialSupplierState);\n  const {\n    name,\n    service,\n    website,\n    contactName,\n    contactEmail,\n    contactNumber,\n    description,\n    note,\n    logo\n  } = store;\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  const supplierKeys = [\n    \"name\",\n    \"service\",\n    \"website\",\n    \"contact_name\",\n    \"contact_email\",\n    \"contact_number\",\n    \"description\",\n    \"note\",\n    \"logo\"\n  ];\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/suppliers/${id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((supplier) => {\n        supplierKeys.map((element) => {\n          dispatch({\n            type: `set${element}`,\n            data: supplier[element],\n          });\n        });\n      });\n  }, [id]);\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name)\n    formData.append(\"service\", service)\n    formData.append(\"website\", website)\n    formData.append(\"contact_name\", contactName)\n    formData.append(\"contact_email\", contactEmail)\n    formData.append(\"contact_number\", contactNumber)\n    formData.append(\"description\", description)\n    formData.append(\"note\", note)\n    formData.append(\"logo\", logo)\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/suppliers/${id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: formData,\n        }\n      );\n      alert(\"Supplier updated\");\n      props.history.push(`/dashboard/supplier/${id}`);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">Edit Supplier</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"name\">Supplier name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"service\">Service</label>\n            <input\n              type=\"text\"\n              name=\"service\"\n              id=\"service\"\n              value={service}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"website\">Website url</label>\n            <input\n              type=\"text\"\n              name=\"website\"\n              id=\"website\"\n              value={website}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"contactName\">Supplier contact name</label>\n            <input\n              type=\"text\"\n              name=\"contact_name\"\n              id=\"contactName\"\n              value={contactName}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"contactEmail\">Supplier contact email</label>\n            <input\n              type=\"email\"\n              name=\"contact_email\"\n              id=\"contactEmail\"\n              value={contactEmail}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"contactNumber\">Supplier contact number</label>\n            <input\n              type=\"text\"\n              name=\"contact_number\"\n              id=\"contactNumber\"\n              value={contactNumber}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              value={description}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"note\">Note</label>\n            <textarea\n              type=\"text\"\n              name=\"note\"\n              id=\"note\"\n              value={note}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"logo\">Logo</label>\n            <input\n              type=\"file\"\n              name=\"logo\"\n              id=\"logo\"\n              accept=\".jpg,.jpeg,.png\"\n              onChange={handleFile} \n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Edit Supplier\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Save\n            </Button>\n          </div>\n          <div className=\"form-content\">\n            <Button\n              variant=\"contained\"\n              value=\"go back\"\n              id=\"submit\"\n              onClick={() => {\n                props.history.goBack();\n              }}\n            >\n              Back\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  );\n}\n\nexport default EditSupplier;\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/user/LoggedOutNav.jsx",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/Chart.js",["223"],"import React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Label,\n} from \"recharts\";\nimport Title from \"./Title\";\n\nfunction createData(date, amount) {\n  return { date, amount };\n}\n\nexport default function Chart({ invoiceData }) {\n  const theme = useTheme();\n  // error handling and choose from paid invoice\n  if (\n    invoiceData &&\n    invoiceData.filter((invoice) => invoice.paid === true).length > 0\n  ) {\n    let data = [];\n    // sort data from earlier to the latest\n    const sortDataByDate = invoiceData.sort((a, b) => {\n        let dateA = new Date(a.receivedDate) \n        let dateB = new Date(b.receivedDate)\n        return dateA - dateB\n      }\n    );\n    sortDataByDate.map((invoice) => {\n      data.push(createData(invoice.receivedDate, invoice.totalPrice));\n    });\n    return (\n      <>\n        <Title>Cost Overview</Title>\n        <ResponsiveContainer>\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 0,\n              left: 24,\n            }}\n          >\n            <XAxis dataKey=\"date\" stroke={theme.palette.text.secondary} />\n            <YAxis stroke={theme.palette.text.secondary}>\n              <Label\n                angle={270}\n                position=\"left\"\n                style={{\n                  textAnchor: \"middle\",\n                  fill: theme.palette.text.primary,\n                }}\n              >\n                Costs ($)\n              </Label>\n            </YAxis>\n            <Line\n              type=\"monotone\"\n              dataKey=\"amount\"\n              stroke={theme.palette.primary.main}\n            />\n            <Tooltip />\n          </LineChart>\n        </ResponsiveContainer>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Title>Cost Overview</Title>\n        <ResponsiveContainer>\n          <LineChart\n            data={\"\"}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 0,\n              left: 24,\n            }}\n          >\n            <XAxis dataKey=\"date\" stroke={theme.palette.text.secondary} />\n            <YAxis stroke={theme.palette.text.secondary}>\n              <Label\n                angle={270}\n                position=\"left\"\n                style={{\n                  textAnchor: \"middle\",\n                  fill: theme.palette.text.primary,\n                }}\n              >\n                Costs ($)\n              </Label>\n            </YAxis>\n            <Line\n              type=\"monotone\"\n              dataKey=\"amount\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </>\n    );\n  }\n}\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/POApprovals.js",["224","225","226","227","228"],"import React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  POApprovalContext: {\n    flex: 1,\n  },\n});\n\nconst POApprovals = ({ poData }) => {\n  const classes = useStyles();\n  if (poData) {\n    let counter = 0;\n    const filteredPoData = poData.filter((po) => po.approvalStatus === false);\n    return (\n      <React.Fragment>\n        <Title>PO Approvals</Title>\n        <Typography component=\"p\" variant=\"h3\">\n          {filteredPoData.length}\n        </Typography>\n        <Typography color=\"textSecondary\" className={classes.POApprovalContext}>\n          {filteredPoData.reverse().map((po) => {\n            if (counter <= 5 && po.po_document) {\n              counter += 1;\n              return (\n                <div>\n                  <a href={po.po_document.url} target=\"_blank\">\n                    ${po.totalPrice} - Ordered on: {po.orderDate}\n                  </a>\n                </div>\n              );\n            } else if (counter <= 5) {\n              {\n                counter += 1;\n                return (\n                  <div>\n                    <p>\n                      ${po.totalPrice} - Ordered on: {po.orderDate}\n                    </p>\n                  </div>\n                );\n              }\n            }\n          })}\n        </Typography>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Title>PO Approvals</Title>\n        <Typography component=\"p\" variant=\"h3\">\n          0\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          className={classes.POApprovalContext}\n        ></Typography>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default POApprovals;\n","/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/info/Contact.jsx",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/supplier_info/PurchaseOrders.js",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/index.js",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/SupplierNotes.js",["229","230"],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/styles/FormContainer.js",[],"/Users/mark/Desktop/CA_PROJECTS/Study folder/T3A2-B_full_stack_app/supi-supplier-management-app-frontend/src/components/dashboard_folder/Title.js",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"231","replacedBy":"235"},{"ruleId":"233","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":20},{"ruleId":"237","severity":1,"message":"241","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":20},{"ruleId":"231","replacedBy":"242"},{"ruleId":"233","replacedBy":"243"},{"ruleId":"237","severity":1,"message":"244","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"245","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"246","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":18},{"ruleId":"237","severity":1,"message":"247","line":33,"column":10,"nodeType":"239","messageId":"240","endLine":33,"endColumn":18},{"ruleId":"237","severity":1,"message":"248","line":33,"column":20,"nodeType":"239","messageId":"240","endLine":33,"endColumn":31},{"ruleId":"237","severity":1,"message":"249","line":7,"column":21,"nodeType":"239","messageId":"240","endLine":7,"endColumn":31},{"ruleId":"237","severity":1,"message":"250","line":17,"column":10,"nodeType":"239","messageId":"240","endLine":17,"endColumn":24},{"ruleId":"237","severity":1,"message":"251","line":20,"column":10,"nodeType":"239","messageId":"240","endLine":20,"endColumn":25},{"ruleId":"237","severity":1,"message":"252","line":23,"column":11,"nodeType":"239","messageId":"240","endLine":23,"endColumn":15},{"ruleId":"253","severity":1,"message":"254","line":89,"column":5,"nodeType":"255","messageId":"256","endLine":94,"endColumn":6},{"ruleId":"253","severity":1,"message":"254","line":146,"column":5,"nodeType":"255","messageId":"256","endLine":151,"endColumn":6},{"ruleId":"253","severity":1,"message":"254","line":172,"column":5,"nodeType":"255","messageId":"256","endLine":177,"endColumn":6},{"ruleId":"231","replacedBy":"257"},{"ruleId":"233","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":96,"column":48,"nodeType":"261","endLine":96,"endColumn":63},{"ruleId":"262","severity":1,"message":"263","line":92,"column":41,"nodeType":"264","messageId":"265","endLine":92,"endColumn":43},{"ruleId":"266","severity":1,"message":"267","line":99,"column":6,"nodeType":"268","endLine":99,"endColumn":8,"suggestions":"269"},{"ruleId":"237","severity":1,"message":"270","line":112,"column":13,"nodeType":"239","messageId":"240","endLine":112,"endColumn":21},{"ruleId":"262","severity":1,"message":"263","line":53,"column":35,"nodeType":"264","messageId":"265","endLine":53,"endColumn":37},{"ruleId":"266","severity":1,"message":"271","line":60,"column":6,"nodeType":"268","endLine":60,"endColumn":8,"suggestions":"272"},{"ruleId":"237","severity":1,"message":"270","line":74,"column":13,"nodeType":"239","messageId":"240","endLine":74,"endColumn":21},{"ruleId":"237","severity":1,"message":"270","line":74,"column":13,"nodeType":"239","messageId":"240","endLine":74,"endColumn":21},{"ruleId":"237","severity":1,"message":"270","line":66,"column":13,"nodeType":"239","messageId":"240","endLine":66,"endColumn":21},{"ruleId":"237","severity":1,"message":"273","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"262","severity":1,"message":"274","line":29,"column":51,"nodeType":"264","messageId":"275","endLine":29,"endColumn":53},{"ruleId":"237","severity":1,"message":"245","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"244","line":1,"column":28,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"276","line":11,"column":8,"nodeType":"239","messageId":"240","endLine":11,"endColumn":22},{"ruleId":"237","severity":1,"message":"277","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":13},{"ruleId":"262","severity":1,"message":"263","line":92,"column":29,"nodeType":"264","messageId":"265","endLine":92,"endColumn":31},{"ruleId":"237","severity":1,"message":"278","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":16},{"ruleId":"237","severity":1,"message":"279","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":22},{"ruleId":"237","severity":1,"message":"280","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":20},{"ruleId":"237","severity":1,"message":"281","line":25,"column":10,"nodeType":"239","messageId":"240","endLine":25,"endColumn":23},{"ruleId":"266","severity":1,"message":"282","line":33,"column":6,"nodeType":"268","endLine":33,"endColumn":8,"suggestions":"283"},{"ruleId":"262","severity":1,"message":"263","line":38,"column":31,"nodeType":"264","messageId":"265","endLine":38,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":50,"column":31,"nodeType":"264","messageId":"265","endLine":50,"endColumn":33},{"ruleId":"237","severity":1,"message":"244","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"245","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"284","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":48},{"ruleId":"237","severity":1,"message":"285","line":2,"column":25,"nodeType":"239","messageId":"240","endLine":2,"endColumn":29},{"ruleId":"237","severity":1,"message":"249","line":2,"column":31,"nodeType":"239","messageId":"240","endLine":2,"endColumn":41},{"ruleId":"237","severity":1,"message":"286","line":4,"column":16,"nodeType":"239","messageId":"240","endLine":4,"endColumn":25},{"ruleId":"237","severity":1,"message":"287","line":78,"column":17,"nodeType":"239","messageId":"240","endLine":78,"endColumn":26},{"ruleId":"237","severity":1,"message":"288","line":78,"column":28,"nodeType":"239","messageId":"240","endLine":78,"endColumn":31},{"ruleId":"237","severity":1,"message":"289","line":14,"column":10,"nodeType":"239","messageId":"240","endLine":14,"endColumn":19},{"ruleId":"237","severity":1,"message":"290","line":16,"column":10,"nodeType":"239","messageId":"240","endLine":16,"endColumn":24},{"ruleId":"237","severity":1,"message":"291","line":17,"column":10,"nodeType":"239","messageId":"240","endLine":17,"endColumn":17},{"ruleId":"237","severity":1,"message":"292","line":18,"column":10,"nodeType":"239","messageId":"240","endLine":18,"endColumn":18},{"ruleId":"237","severity":1,"message":"293","line":19,"column":10,"nodeType":"239","messageId":"240","endLine":19,"endColumn":21},{"ruleId":"237","severity":1,"message":"294","line":19,"column":23,"nodeType":"239","messageId":"240","endLine":19,"endColumn":37},{"ruleId":"237","severity":1,"message":"270","line":83,"column":13,"nodeType":"239","messageId":"240","endLine":83,"endColumn":21},{"ruleId":"237","severity":1,"message":"270","line":31,"column":13,"nodeType":"239","messageId":"240","endLine":31,"endColumn":21},{"ruleId":"237","severity":1,"message":"285","line":7,"column":21,"nodeType":"239","messageId":"240","endLine":7,"endColumn":25},{"ruleId":"262","severity":1,"message":"263","line":71,"column":36,"nodeType":"264","messageId":"265","endLine":71,"endColumn":38},{"ruleId":"266","severity":1,"message":"295","line":78,"column":6,"nodeType":"268","endLine":78,"endColumn":10,"suggestions":"296"},{"ruleId":"237","severity":1,"message":"270","line":93,"column":13,"nodeType":"239","messageId":"240","endLine":93,"endColumn":21},{"ruleId":"262","severity":1,"message":"263","line":33,"column":34,"nodeType":"264","messageId":"265","endLine":33,"endColumn":36},{"ruleId":"237","severity":1,"message":"285","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":12},{"ruleId":"237","severity":1,"message":"273","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"262","severity":1,"message":"274","line":29,"column":46,"nodeType":"264","messageId":"275","endLine":29,"endColumn":48},{"ruleId":"259","severity":1,"message":"260","line":34,"column":48,"nodeType":"261","endLine":34,"endColumn":63},{"ruleId":"297","severity":1,"message":"298","line":40,"column":15,"nodeType":"299","messageId":"300","endLine":49,"endColumn":16},{"ruleId":"237","severity":1,"message":"273","line":8,"column":10,"nodeType":"239","messageId":"240","endLine":8,"endColumn":24},{"ruleId":"237","severity":1,"message":"301","line":19,"column":9,"nodeType":"239","messageId":"240","endLine":19,"endColumn":16},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],["302"],["303"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'LoggedOutNav' is defined but never used.",["302"],["303"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'SearchIcon' is defined but never used.","'supplier' is assigned a value but never used.","'setSupplier' is assigned a value but never used.","'useHistory' is defined but never used.","'poDataWithFile' is assigned a value but never used.","'invoiceWithFile' is assigned a value but never used.","'data' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["302"],["303"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'purchaseOrderKeys'. Either include them or remove the dependency array.","ArrayExpression",["304"],"'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'invoiceKeys'. Either include them or remove the dependency array.",["305"],"'preventDefault' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'PurchaseOrders' is defined but never used.","'Paper' is defined but never used.","'StarIcon' is defined but never used.","'StarBorderIcon' is defined but never used.","'StarHalfIcon' is defined but never used.","'reviewComment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleComment' and 'handleReview'. Either include them or remove the dependency array.",["306"],"'useContext' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'user_name' is assigned a value but never used.","'jwt' is assigned a value but never used.","'suppliers' is assigned a value but never used.","'purchaseOrders' is assigned a value but never used.","'reviews' is assigned a value but never used.","'invoices' is assigned a value but never used.","'invoiceData' is assigned a value but never used.","'setInvoiceData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'supplierKeys'. Either include it or remove the dependency array.",["307"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [id, purchaseOrderKeys]",{"range":"316","text":"317"},"Update the dependencies array to be: [id, invoiceKeys]",{"range":"318","text":"319"},"Update the dependencies array to be: [handleComment, handleReview]",{"range":"320","text":"321"},"Update the dependencies array to be: [id, supplierKeys]",{"range":"322","text":"323"},[2192,2194],"[id, purchaseOrderKeys]",[1471,1473],"[id, invoiceKeys]",[1228,1230],"[handleComment, handleReview]",[1662,1666],"[id, supplierKeys]"]