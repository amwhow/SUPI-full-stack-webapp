[{"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Dashboard.js":"1","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/App.js":"2","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/DashboardHome.js":"3","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/invoice/NewInvoice.jsx":"4","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/document/NewDocument.jsx":"5","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/review/NewReview.jsx":"6","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/PO/NewPO.jsx":"7","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Chart.js":"8","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/user/Login.jsx":"9","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/utils/reducer.js":"10","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Calendar.js":"11","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/table/POTable.jsx":"12","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/table/InvoiceTable.jsx":"13","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/QuickContacts.js":"14","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/table/DocumentTable.jsx":"15","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/supplier/NewSupplier.jsx":"16","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/user/LoggedOutNav.jsx":"17","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/Home.jsx":"18","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/DashboardSupplier.js":"19","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Title.js":"20"},{"size":4611,"mtime":1612484332043,"results":"21","hashOfConfig":"22"},{"size":1886,"mtime":1612508335617,"results":"23","hashOfConfig":"22"},{"size":1469,"mtime":1612484332043,"results":"24","hashOfConfig":"22"},{"size":4226,"mtime":1612572348223,"results":"25","hashOfConfig":"22"},{"size":4343,"mtime":1612485923089,"results":"26","hashOfConfig":"22"},{"size":4315,"mtime":1612485893489,"results":"27","hashOfConfig":"22"},{"size":5625,"mtime":1612510667831,"results":"28","hashOfConfig":"22"},{"size":1536,"mtime":1612130527964,"results":"29","hashOfConfig":"22"},{"size":2555,"mtime":1612401363394,"results":"30","hashOfConfig":"22"},{"size":3929,"mtime":1612572427448,"results":"31","hashOfConfig":"22"},{"size":855,"mtime":1612130527964,"results":"32","hashOfConfig":"22"},{"size":3500,"mtime":1612496799900,"results":"33","hashOfConfig":"22"},{"size":2943,"mtime":1612500232922,"results":"34","hashOfConfig":"22"},{"size":1383,"mtime":1612130527964,"results":"35","hashOfConfig":"22"},{"size":2475,"mtime":1612508406247,"results":"36","hashOfConfig":"22"},{"size":5611,"mtime":1612510761647,"results":"37","hashOfConfig":"22"},{"size":1449,"mtime":1612401363394,"results":"38","hashOfConfig":"22"},{"size":1362,"mtime":1612401363390,"results":"39","hashOfConfig":"22"},{"size":1471,"mtime":1612484332043,"results":"40","hashOfConfig":"22"},{"size":343,"mtime":1612130527964,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"9umdyh",{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Dashboard.js",[],["91","92"],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/App.js",["93","94","95","96","97","98"],"import { React, useState, useEffect, useContext } from 'react'\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\nimport Login from './components/user/Login'\nimport LoggedOutNav from './components/user/LoggedOutNav'\nimport Dashboard from \"./components/dashboard_folder/Dashboard\";\nimport NewUser from \"./components/user/NewUser\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Home from \"./components/Home\"\nimport NewSupplier from './components/supplier/NewSupplier'\nimport NewPO from './components/PO/NewPO'\nimport NewDocument from './components/document/NewDocument'\nimport NewReview from './components/review/NewReview'\nimport NewInvoice from './components/invoice/NewInvoice'\nimport POTable from './components/table/POTable'\nimport InvoiceTable from './components/table/InvoiceTable'\nimport DocumentTable from './components/table/DocumentTable'\n\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Switch>\n        <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/signup\" component={NewUser} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/\" component={Home} />\n        <ProtectedRoute exact path=\"/suppliers/new\" component={NewSupplier} />\n        <ProtectedRoute exact path=\"/purchase_orders/new\" component={NewPO} />\n        <ProtectedRoute exact path=\"/documents/new\" component={NewDocument} />\n        <ProtectedRoute exact path=\"/purchase_orders\" component={POTable} />\n        <ProtectedRoute exact path=\"/invoices\" component={InvoiceTable} />\n        <ProtectedRoute exact path=\"/documents\" component={DocumentTable} />\n        <ProtectedRoute exact path=\"/purchase_orders/:id/reviews/new\" component={NewReview} />\n        <ProtectedRoute exact path=\"/purchase_orders/:id/invoices/new\" component={NewInvoice} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n",["99","100"],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/DashboardHome.js",[],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/invoice/NewInvoice.jsx",["101","102"],"import React, { useReducer } from \"react\";\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction NewInvoice({ history, match }) {\n  const initialInvoiceState = {\n    receivedDate: \"\",\n    dueDate: \"\",\n    totalPrice: \"\",\n    paid: \"\",\n    purchaseOrderId: match.params.id,\n    invoiceDocument: \"\"\n  }\n\n  // recommend we add a function to set today's date as the min value for date inputs\n\n  const [store, dispatch] = useReducer(reducer, initialInvoiceState)\n  const {receivedDate, dueDate, totalPrice, paid, invoiceDocument} = store\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n    const body = { invoice: {receivedDate: receivedDate, dueDate: dueDate, totalPrice: totalPrice, paid: paid, purchase_order_id: match.params.id} }\n    // , invoice_document\n\n    const formData = new FormData();\n    formData.append(\"receivedDate\", receivedDate)\n    formData.append(\"dueDate\", dueDate)\n    formData.append(\"totalPrice\", totalPrice)\n    formData.append(\"paid\", paid)\n    formData.append(\"purchase_order_id\", match.params.id)\n    formData.append(\"invoiceDocument\", invoiceDocument)\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/invoices`, {\n        method: \"POST\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formData,\n      });\n      history.push(\"/invoices\")\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">New Invoice</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"receivedDate\">Date received</label>\n            <input\n              type=\"date\"\n              name=\"receivedDate\"\n              id=\"receivedDate\"\n              value={receivedDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"dueDate\">Date due</label>\n            <input\n              type=\"date\"\n              name=\"dueDate\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"totalPrice\">Total price</label>\n            <input\n              type=\"number\"\n              name=\"totalPrice\"\n              id=\"totalPrice\"\n              step=\".01\"\n              min=\"1\"\n              value={totalPrice}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"paid\">Payment made</label>\n            <select \n              name=\"paid\" \n              id=\"paid\"\n              value={paid}\n              onChange={handleChange}>\n                <option value=''>Select payment status</option>\n                <option value={false}>Awaiting payment</option>\n                <option value={true}>Payment made</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"invoiceDocument\">File</label>\n            <input\n              type=\"file\"\n              name=\"invoiceDocument\"\n              id=\"invoiceDocument\"\n              accept=\".pdf,.doc,.md\" \n              onChange={handleFile}\n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Create Invoice\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  )\n}\n\nexport default NewInvoice;\n","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/document/NewDocument.jsx",["103","104"],"import React, {useReducer, useState, useEffect} from \"react\"\nimport reducer from '../../utils/reducer'\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction NewDocument({ history }) {\n  const initialDocumentState = {\n    expiryDate: \"\",\n    documentType: \"\",\n    supplierDocument: \"\"\n  }\n\n  // recommend we add a function to set today's date as the min value for date inputs\n\n  const [store, dispatch] = useReducer(reducer, initialDocumentState)\n  const {expiryDate, documentType, supplierDocument} = store\n\n  const [supplierId, setSupplierId] = useState({\n    data: [],\n    selected: ''\n  });\n\n  function fetchSuppliers() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/suppliers`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    })\n      .then((res) => res.json())\n      .then((body) => setSupplierId({\n        data: body,\n        selected: ''\n      }))\n  }\n\n  useEffect(() => {\n    fetchSuppliers();\n  },[])\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value\n    })\n  }\n\n  const handleSelect = (e) => {\n    setSupplierId({\n      data: supplierId.data,\n      selected: e.target.value\n    })\n  }\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n    const body = { document: {expiryDate: expiryDate, documentType: documentType, supplier_id: supplierId.selected} }\n    // , supplierDocument\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/documents`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(body),\n      });\n      history.push(\"/documents\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">New Document</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit}>\n          <div className=\"form-content\">\n            <label htmlFor=\"expiryDate\">Expiry date</label>\n            <input\n              type=\"date\"\n              name=\"expiryDate\"\n              id=\"expiryDate\"\n              value={expiryDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"documentType\">Document type</label>\n            <select \n              name=\"documentType\" \n              id=\"documentType\"\n              value={documentType}\n              onChange={handleChange}>\n                <option value=\"\">Select document type</option>\n                <option value=\"Licence\">Licence</option>\n                <option value=\"Contract\">Contract</option>\n                <option value=\"Risk Assessment\">Risk Assessment</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"supplier_id\">Supplier</label>\n            <select\n              name=\"supplierId\"\n              id=\"supplierId\"\n              value={supplierId}\n              onChange={handleSelect}>\n                <option key={0} value={''}>\n                    Select supplier\n                  </option>\n                {supplierId.data.map((option) => {\n                  return( <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option> )\n                })}\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"supplier_document\">File</label>\n            <input\n              type=\"file\"\n              name=\"PO_document\"\n              id=\"PO_document\"\n              accept=\".pdf,.doc,.md\" \n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Create Document\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  )\n}\n\nexport default NewDocument;\n","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/review/NewReview.jsx",["105"],"import React, { useReducer } from \"react\";\nimport reducer from \"../../utils/reducer\";\nimport { Form } from \"../styles/Form\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction NewReview({ history, match }) {\n  const initialReviewState = {\n    qualityRating: \"\",\n    reliabilityRating: \"\",\n    costRating: \"\",\n    comment: \"\",\n    purchaseOrderId: match.params.id\n  }\n\n  const [store, dispatch] = useReducer(reducer, initialReviewState)\n  const {qualityRating, reliabilityRating, costRating, comment} = store\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n    const body = { review: {qualityRating: qualityRating, reliabilityRating: reliabilityRating, costRating: costRating, comment: comment, purchase_order_id: match.params.id} }\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/reviews`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify(body),\n        }\n      );\n      history.push(\"/reviews\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>\n        <h1 className=\"new-doc-header\">New Review</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit}>\n          <div className=\"form-content\">\n            <label htmlFor=\"qualityRating\">Quality rating</label>\n            <select \n              name=\"qualityRating\"\n              id=\"qualityRating\"\n              value={qualityRating}\n              onChange={handleChange}>\n                <option value=''>Select rating</option>\n                <option value={0}>0 Stars</option>\n                <option value={1}>1 Star</option>\n                <option value={2}>2 Stars</option>\n                <option value={3}>3 Stars</option>\n                <option value={4}>4 Stars</option>\n                <option value={5}>5 Stars</option>\n              </select>\n            </div>\n            <div className=\"form-content\">\n              <label htmlFor=\"reliabilityRating\">Reliability rating</label>\n              <select \n                name=\"reliabilityRating\"\n                id=\"reliabilityRating\"\n                value={reliabilityRating}\n                onChange={handleChange}>\n                  <option value=''>Select rating</option>\n                <option value={0}>0 Stars</option>\n                <option value={1}>1 Star</option>\n                <option value={2}>2 Stars</option>\n                <option value={3}>3 Stars</option>\n                <option value={4}>4 Stars</option>\n                <option value={5}>5 Stars</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"costRating\">Cost rating</label>\n            <select \n              name=\"costRating\" \n              id=\"costRating\"\n              value={costRating}\n              onChange={handleChange}>\n                <option value=''>Select rating</option>\n                <option value={0}>0 Stars</option>\n                <option value={1}>1 Star</option>\n                <option value={2}>2 Stars</option>\n                <option value={3}>3 Stars</option>\n                <option value={4}>4 Stars</option>\n                <option value={5}>5 Stars</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"comment\">Comment</label>\n            <input\n              type=\"text\"\n              name=\"comment\"\n              id=\"comment\"\n              value={comment}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Submit Review\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  );\n}\n\nexport default NewReview;\n","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/PO/NewPO.jsx",["106","107"],"import React, {useReducer, useState, useEffect} from \"react\"\nimport reducer from \"../../utils/reducer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form } from \"../styles/Form\";\nimport FormContainer from \"../styles/FormContainer\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction NewPO({ history }) {\n  const initialPOState = {\n    orderDate: \"\",\n    approvalStatus: \"\",\n    totalPrice: \"\",\n    delivered: \"\",\n    PODocument: \"\"\n  }\n  \n  const [supplierId, setSupplierId] = useState({\n    data: [],\n    selected: ''\n  });\n  \n  function fetchSuppliers() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/suppliers`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    })\n      .then((res) => res.json())\n      .then((body) => setSupplierId({\n        data: body,\n        selected: ''\n      }))\n  }\n\n  useEffect(() => {\n    fetchSuppliers();\n  },[])\n\n  // recommend we add a function to set today's date as the min value for date inputs\n\n  const [store, dispatch] = useReducer(reducer, initialPOState)\n  const {orderDate, approvalStatus, totalPrice, delivered, PODocument} = store\n\n  const handleChange = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.value,\n    });\n  };\n\n  const handleFile = (e) => {\n    dispatch({\n      type: `set${e.target.name}`,\n      data: e.target.files[0]\n    })\n  }\n\n  const handleSelect = (e) => {\n    setSupplierId({\n      data: supplierId.data,\n      selected: e.target.value\n    })\n  }\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n    const body = { purchase_order: {orderDate: orderDate, approvalStatus: approvalStatus, totalPrice: totalPrice, delivered: delivered, supplier_id: supplierId.selected, PO_document: PODocument} }\n    const formData = new FormData();\n    formData.append(\"orderDate\", orderDate)\n    formData.append(\"approvalStatus\", approvalStatus)\n    formData.append(\"totalPrice\", totalPrice)\n    formData.append(\"delivered\", delivered)\n    formData.append(\"supplier_id\", supplierId.selected)\n    formData.append(\"PO_document\", PODocument)\n\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/purchase_orders`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: formData,\n        }\n      );\n      history.push(\"/purchase_orders\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Grid item xs={12} sm={8}>    \n        <h1 className=\"new-doc-header\">New PO</h1>\n        <Form className=\"new-invoice-form\" onSubmit={onFormSubmit} encType=\"multipart/form-data\">\n          <div className=\"form-content\">\n            <label htmlFor=\"orderDate\">Order date</label>\n            <input\n              type=\"date\"\n              name=\"orderDate\"\n              id=\"orderDate\"\n              value={orderDate}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"approvalStatus\">Approval</label>\n            <select\n              name=\"approvalStatus\"\n              id=\"approvalStatus\"\n              value={approvalStatus}\n              onChange={handleChange}>\n                <option value=''>Select approval status</option>\n                <option value={false}>Awaiting approval</option>\n                <option value={true}>Approved</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"totalPrice\">Total price</label>\n            <input\n              type=\"number\"\n              name=\"totalPrice\"\n              id=\"totalPrice\"\n              value={totalPrice}\n              step=\".01\"\n              min=\"1\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"delivered\">Delivery</label>\n            <select\n              name=\"delivered\"\n              id=\"delivered\"\n              value={delivered}\n              onChange={handleChange}>\n                <option value=''>Select delivery status</option>\n                <option value={false}>Awaiting delivery</option>\n                <option value={true}>Delivered</option>\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"supplierId\">Supplier</label>\n            <select\n              name=\"supplierId\"\n              id=\"supplierId\"\n              value={supplierId}\n              onChange={handleSelect}>\n                <option key={0} value={''}>\n                    Select supplier\n                  </option>\n                {supplierId.data.map((option) => {\n                  return( <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option> )\n                })}\n            </select>\n          </div>\n          <div className=\"form-content\">\n            <label htmlFor=\"PODocument\">File</label>\n            <input\n              type=\"file\"\n              name=\"PODocument\"\n              id=\"PODocument\"\n              accept=\".pdf,.doc,.md\"\n              onChange={handleFile} \n            />\n          </div>\n          <div className=\"form-content\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              value=\"Create PO\"\n              id=\"submit\"\n              color=\"primary\"\n            >\n              Create\n            </Button>\n          </div>\n        </Form>\n      </Grid>\n    </FormContainer>\n  )\n}\n\nexport default NewPO;\n","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Chart.js",[],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/user/Login.jsx",["108","109"],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/utils/reducer.js",["110","111","112"],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Calendar.js",["113","114"],"import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  calendarContext: {\n    flex: 1,\n  },\n});\n\nexport default function Calendar() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Calendar here</Title>\n      {/* <Typography component=\"p\" variant=\"h4\">\n        $308.00\n      </Typography> */}\n      <Typography color=\"textSecondary\" className={classes.calendarContext}>\n        1 Feb, 2021\n      </Typography>\n      {/* <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div> */}\n    </React.Fragment>\n  );\n}\n","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/table/POTable.jsx",[],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/table/InvoiceTable.jsx",[],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/QuickContacts.js",[],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/table/DocumentTable.jsx",[],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/supplier/NewSupplier.jsx",["115","116"],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/user/LoggedOutNav.jsx",["117","118","119","120","121","122","123","124","125","126"],"import React from \"react\";\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\nimport Dashboard from \"../dashboard_folder/Dashboard\";\nimport NewUser from \"./NewUser\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"../ProtectedRoute\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function LoggedOutNav() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            SUPI\n          </Typography>\n          <Button color=\"inherit\">Contact us</Button>\n          <Button color=\"inherit\">About</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n      // <Switch>\n      //   <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n      //   <Route exact path=\"/signup\" component={NewUser} />\n      //   <Route exact path=\"/login\" component={Login} />\n      // </Switch>\n  );\n}\n","/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/Home.jsx",["127"],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/DashboardSupplier.js",[],"/home/mick/Desktop/programming/CoderAcademy/SUPI-supplier-management-app-frontend/src/components/dashboard_folder/Title.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"136","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"137","line":1,"column":38,"nodeType":"134","messageId":"135","endLine":1,"endColumn":48},{"ruleId":"132","severity":1,"message":"138","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":29},{"ruleId":"132","severity":1,"message":"139","line":2,"column":31,"nodeType":"134","messageId":"135","endLine":2,"endColumn":41},{"ruleId":"132","severity":1,"message":"140","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":20},{"ruleId":"128","replacedBy":"141"},{"ruleId":"130","replacedBy":"142"},{"ruleId":"132","severity":1,"message":"143","line":39,"column":11,"nodeType":"134","messageId":"135","endLine":39,"endColumn":15},{"ruleId":"132","severity":1,"message":"144","line":51,"column":13,"nodeType":"134","messageId":"135","endLine":51,"endColumn":21},{"ruleId":"132","severity":1,"message":"145","line":18,"column":36,"nodeType":"134","messageId":"135","endLine":18,"endColumn":52},{"ruleId":"132","severity":1,"message":"144","line":61,"column":13,"nodeType":"134","messageId":"135","endLine":61,"endColumn":21},{"ruleId":"132","severity":1,"message":"144","line":31,"column":13,"nodeType":"134","messageId":"135","endLine":31,"endColumn":21},{"ruleId":"132","severity":1,"message":"143","line":67,"column":11,"nodeType":"134","messageId":"135","endLine":67,"endColumn":15},{"ruleId":"132","severity":1,"message":"144","line":77,"column":13,"nodeType":"134","messageId":"135","endLine":77,"endColumn":21},{"ruleId":"132","severity":1,"message":"146","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":20},{"ruleId":"132","severity":1,"message":"140","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":89,"column":5,"nodeType":"149","messageId":"150","endLine":94,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":146,"column":5,"nodeType":"149","messageId":"150","endLine":151,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":172,"column":5,"nodeType":"149","messageId":"150","endLine":177,"endColumn":6},{"ruleId":"132","severity":1,"message":"138","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"151","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":24},{"ruleId":"132","severity":1,"message":"143","line":52,"column":11,"nodeType":"134","messageId":"135","endLine":52,"endColumn":15},{"ruleId":"132","severity":1,"message":"144","line":76,"column":13,"nodeType":"134","messageId":"135","endLine":76,"endColumn":21},{"ruleId":"132","severity":1,"message":"152","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":15},{"ruleId":"132","severity":1,"message":"153","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":23},{"ruleId":"132","severity":1,"message":"138","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":29},{"ruleId":"132","severity":1,"message":"139","line":2,"column":31,"nodeType":"134","messageId":"135","endLine":2,"endColumn":41},{"ruleId":"132","severity":1,"message":"154","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":17},{"ruleId":"132","severity":1,"message":"155","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":15},{"ruleId":"132","severity":1,"message":"156","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":13},{"ruleId":"132","severity":1,"message":"157","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":22},{"ruleId":"132","severity":1,"message":"158","line":12,"column":8,"nodeType":"134","messageId":"135","endLine":12,"endColumn":18},{"ruleId":"132","severity":1,"message":"159","line":13,"column":8,"nodeType":"134","messageId":"135","endLine":13,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'LoggedOutNav' is defined but never used.",["160"],["161"],"'body' is assigned a value but never used.","'response' is assigned a value but never used.","'supplierDocument' is assigned a value but never used.","'makeStyles' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'preventDefault' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Dashboard' is defined but never used.","'NewUser' is defined but never used.","'Login' is defined but never used.","'ProtectedRoute' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]